image: node:carbon

clone:
  depth: full

pipelines:
  default:
  - step:
      caches:
      - node
      #      - sonarcloud
      #      - node-scanner
      script:
      - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
      - npm install
      - npm run bootstrap-deps
      - npm install -g gulp
      - npm run build
      - npm run test:ci
      - npm run test:lint
      - npm run test:sonar
      services:
      - mongo
  - step:
      name: Deploy beta version
      trigger: manual
      deployment: staging
      caches:
      - node
      script:
      - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
      - git config --global user.email "bitbucket-bot@applicature.com"
      - git config --global user.name "Bitbucket Bot"
      - >-
        npm run lerna-publish -- "prerelease" "--yes" "-m '[skip ci] chore(alpha): publish %s'"
  branches:
    master:
    - step:
        deployment: production
        caches:
        - node
        #        - sonarcloud
        #        - node-scanner
        script:
        - printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
        - npm install
        - npm run bootstrap-deps
        - npm install -g gulp
        - npm run build
        - npm run test:ci
        - npm run test:lint
        - npm run test:sonar
        - git config --global user.email "bitbucket-bot@applicature.com"
        - git config --global user.name "Bitbucket Bot"
        - >-
          npm run lerna-publish -- "patch"  "--yes" "-m '[skip ci] chore(release): publish %s'"
        services:
        - mongo

definitions:
  caches:
  #    sonarcloud: ~/.sonar/cache
  #    node-scanner: ~/.sonar/native-sonar-scanner
  services:
    mongo:
      image: mongo